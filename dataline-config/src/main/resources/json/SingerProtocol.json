{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/datalineio/dataline/blob/master/dataline-config/src/main/resources/json/SingerProtocol.json",
  "title": "SingerProtocol",
  "description": "This is a compromise. Java codegen doesn't support union types. So we need to just make a flat json schema that looks like at of the possible permutations of a singer message.",
  "type": "object",
  "additionalProperties": false,
  "required": ["type"],
  "properties": {
    "type": {
      "type": "string",
      "enum": [
        "RECORD",
        "SCHEMA",
        "STATE"
      ]
    },
    "stream": {
      "description": "record AND schema message: name of stream",
      "type": "string"
    },
    "time_extracted": {
      "description": "record message: timestamp",
      "type": "string"
    },
    "record": {
      "description": "record message: no schema, just a map of string to object!"
    },
    "schema": {
      "description": "schema message: the schema",
      "$ref": "SingerSchema.json"
    },
    "key_properties": {
      "description": "schema message: names of keys",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "bookmark_properties": {
      "description": "schema message: names of bookmarks",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "value": {
      "description": "state message: no schema, just a map of string to object!"
    }
  }
}
