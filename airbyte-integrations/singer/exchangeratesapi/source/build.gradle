plugins {
    id 'java'
}

apply plugin: 'ru.vyarus.use-python'

python {
    envPath = '.venv'
    minPythonVersion = '3.7'
    scope = VIRTUALENV
    installVirtualenv = true
    pip 'flake8:3.8.4'
    pip 'black:20.8b1'
    pip 'mypy:0.790'
}

task installReqs(type: PythonTask) {
    module = "pip"
    command = "install -r requirements.txt"
}

task fmt(type: PythonTask) {
    module = "black"
    command = "."
}

task check2(type: PythonTask) {
    module = "flake8"
    command = ". --config /Users/jrhizor/code/airbyte/tools/python/.flake8"
}

task check3(type: PythonTask) {
    module = "mypy"
    command = "-m source_exchangeratesapi_singer --config-file /Users/jrhizor/code/airbyte/tools/python/.mypy.ini"
}

task check4(type: PythonTask) {
    module = "pip"
    command = "install ."
}

apply plugin: "idea"
idea {
    module {
        sourceDirs += file('.')
    }
}

sourceSets {
    main {
        java {
            srcDirs = []
        }
    }
}

// todo: get -e imports highlighting working in intellij
    // todo: should I try symlinking?
// todo: wire these all up to the right commands (compile for checkPython and installReqs?, check for everything else?)
// todo: write up instructions on how to set up interpreters in intellij
// todo: abstract this out into a library (like how we did Docker)
// todo: use output artifact from this for actually building the docker image
// todo: try on CI

apply from: rootProject.file('tools/gradle/commons/integrations/image.gradle')
apply from: rootProject.file('tools/gradle/commons/integrations/integration-test.gradle')

dependencies {
    integrationTestImplementation project(':airbyte-workers')
    integrationTestImplementation project(':airbyte-config:models')
    integrationTestImplementation project(':airbyte-protocol:models')
}

integrationTest.dependsOn(buildImage)
buildImage.dependsOn ':airbyte-integrations:base-singer:buildImage'
